(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function n(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(t){if(t.ep)return;t.ep=!0;const o=n(t);fetch(t.href,o)}})();(()=>{const s=document.querySelector(".header__button-login"),e=document.querySelector(".modal__close-button"),n=document.querySelector(".modal"),r=document.querySelector(".modal__toggle-password"),t=document.querySelector(".modal__content"),o=document.querySelector("#password"),c=()=>{n.style.display=n.style.display==="block"?"none":"block"};s.addEventListener("click",c),e.addEventListener("click",c),n.addEventListener("click",i=>{t.contains(i.target)||(n.style.display="none")}),r.addEventListener("click",()=>{const i=o.getAttribute("type")==="password"?"text":"password";o.setAttribute("type",i)})})();class l{constructor(e){this.contents=document.querySelectorAll(e.contentSelector),this.text=e.text,this.content=document.querySelector(e.heroHeadlineSelector),this.typeDelay=e.typeDelay||200,this.index=0,this.contentObserver=new d(this.contents),this.type()}type(){if(this.index<this.text.length){if(this.text[this.index]===`
`)this.content.appendChild(document.createElement("br"));else{const e=document.createElement("span");this.index>=0&&this.index<12&&e.classList.add("telegram-chat"),e.innerText=this.text[this.index],this.content.appendChild(e)}this.index++,setTimeout(this.type.bind(this),this.typeDelay)}}}class d{constructor(e){this.contents=e,this.observer=new IntersectionObserver(this.handleIntersect.bind(this)),this.observeContents()}handleIntersect(e){e.forEach(n=>{n.isIntersecting&&(n.target.classList.add("visible"),n.target.querySelectorAll(".hero__title, .header, .hero__picture").forEach(r=>r.classList.add("visible")))})}observeContents(){this.contents.forEach(e=>this.observer.observe(e))}}(()=>{const s={contentSelector:".content",heroHeadlineSelector:".hero__headline",text:`Telegram чат
на вашем сайте`,typeDelay:200};new l(s)})();console.log(1);console.log("привет");
